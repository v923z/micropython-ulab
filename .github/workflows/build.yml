name: Build CI

on:
  push:
  pull_request:
    paths:
    - 'code/**'
    - 'tests/**'
    - '.github/workflows/**'
  release:
    types: [published]
  check_suite:
    types: [rerequested]

jobs:
  micropython:
    runs-on: ubuntu-16.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5

    - name: Versions
      run: |
        gcc --version
        python3 --version
    - name: Checkout ulab
      uses: actions/checkout@v1

    - name: Checkout micropython repo
      uses: actions/checkout@v2
      with:
        repository: micropython/micropython
        path: micropython

    - name: Checkout micropython submodules
      run: (cd micropython && git submodule update --init)

    - name: Build mpy-cross
      run: make -C micropython/mpy-cross -j2

    - name: Build micropython unix port
      run: |
        make -C micropython/ports/unix -j2 deplibs
        make -C micropython/ports/unix -j2 USER_C_MODULES=$(readlink -f .)

    - name: Run tests
      run: env MICROPYTHON_CPYTHON3=python3.5 MICROPY_MICROPYTHON=micropython/ports/unix/micropython micropython/tests/run-tests -d tests
    - name: Print failure info
      run: |
        for exp in *.exp;
        do testbase=$(basename $exp .exp);
        echo -e "\nFAILURE $testbase";
        diff -u $testbase.exp $testbase.out;
        done
      if: failure()

  circuitpython:
    runs-on: ubuntu-16.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5

    - name: Versions
      run: |
        gcc --version
        python3 --version

    - name: Checkout ulab
      uses: actions/checkout@v1

    - name: Install requirements
      run: |
        sudo apt install librsvg2-bin gettext
        pip install "Sphinx<4" sphinx-rtd-theme recommonmark sphinx-autoapi sphinxcontrib-svg2pdfconverter astroid isort polib black

    - name: Run build-cp.sh
      run: ./build-cp.sh
